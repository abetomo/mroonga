name: Release
on:
  push:
    tags:
      - "*"
jobs:
  publish:
    name: Publish
    runs-on: ubuntu-latest
    # timeout-minutes: 10
    environment: release
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        run: |
          workflows=(linux.yml windows.yml)
          for workflow in "${workflows[@]}"; do
            run_id=""
            while true; do
              echo "Waiting for run to start ${workflow}..."
              run_id=$(gh run list \
                         --branch ${GITHUB_REF_NAME} \
                         --jq '.[].databaseId' \
                         --json databaseId \
                         --limit 1 \
                         --workflow ${workflow})
              if [ -n "${run_id}" ]; then
                break
              fi
              sleep 300
            done
            gh run watch \
              --exit-status \
              --interval 300 \
              ${run_id}
            gh run download ${run_id} \
              --dir release-artifacts \
              --pattern "release-*"
          done
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Publish to GitHub
        run: |
          (cd doc/source/news && \
           ruby \
             -e 'print("## Mroonga ");
                 puts(ARGF.read.split(/^## Release /)[1].
                        gsub(/^\(.+\)=$/, "").
                        gsub(/{doc}`(.+?)`/) {
                          id = $1;
                          title = id.split("\/").last;
                          path = id.delete_prefix("/");
                          url = "https://mroonga.org/docs/#{path}.html";
                          "[#{title}](#{url})";
                        }.
                        gsub(/{ref}`(.+?)`/) {$1}.
                        gsub(/\[(GH-\d+)\]\(.+?\)/) {$1}.
                        strip)' \
             $(ls *.md | sort --human-numeric-sort | tail -n1)) > \
            release-note.md
          echo "" >> release-note.md
          echo "### Translations" >> release-note.md
          echo "" >> release-note.md
          version=${GITHUB_REF_NAME#v}
          major_version=${version%%.*}
          version_hyphen=$(echo ${version} | tr . -)
          ja_release_note_url="https://mroonga.org/ja/docs/news/${major_version}.html#release-${version_hyphen}"
          echo " * [Japanese](${ja_release_note_url})" >> release-note.md
          title="$(head -n1 release-note.md | sed -e 's/^## //')"
          tail -n +2 release-note.md > release-note-without-version.md
          gh release create ${GITHUB_REF_NAME} \
            --discussion-category Releases \
            --notes-file release-note-without-version.md \
            --title "${title}" \
            release-artifacts/*/*
        env:
          GH_TOKEN: ${{ github.token }}
      - uses: actions/checkout@v4
        with:
          path: groonga
          repository: groonga/groonga
      - name: Prepare for Launchpad publishing
        run: |
          cp release-artifacts/release-source/mroonga-*.tar.gz ./
          sudo apt update
          sudo apt install -y gpg
      - name: Publish to Launchpad
        env:
          GROONGA_REPOSITORY: ${{ github.workspace }}/groonga
          LAUNCHPAD_DEPLOY_KEY: ${{ secrets.LAUNCHPAD_DEPLOY_KEY }}
        run: |
          echo "${LAUNCHPAD_DEPLOY_KEY}" | gpg --import
          echo "trusted-key 0x32862FBCD63D72C152EFF3A9BD481CAA9168EA87" > \
            ~/.gnupg/gpg.conf
          rake -C packages ubuntu
